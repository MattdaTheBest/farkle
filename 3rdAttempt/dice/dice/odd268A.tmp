[gd_scene load_steps=25 format=3 uid="uid://c4ujdi8q3fv1v"]

[ext_resource type="Texture2D" uid="uid://df4bltru215ad" path="res://newVersion/sprites/die.png" id="1_5cihv"]
[ext_resource type="Shader" path="res://3rdAttempt/dice/dice/highLightShader.gdshader" id="1_jegh1"]
[ext_resource type="Texture2D" uid="uid://r8xj0h0hg7tf" path="res://newVersion/sprites/odd_die_faces.png" id="2_obnvy"]
[ext_resource type="Texture2D" uid="uid://c2dcdnkwnc3am" path="res://newVersion/sprites/rotating_dice.png" id="3_14wer"]
[ext_resource type="PackedScene" uid="uid://cls0wakep4jwl" path="res://3rdAttempt/scenes/unrolled_face.tscn" id="4_eriu8"]
[ext_resource type="PackedScene" uid="uid://djycb4t3anq43" path="res://3rdAttempt/scenes/unrolled_face_name.tscn" id="5_cyuuo"]

[sub_resource type="GDScript" id="GDScript_1gxl3"]
script/source = "extends DiceBaseScript
class_name OddDie

@export var dice_name : String
@export var face_values : Array = [1, 2, 3, 4, 5, 6]
@export var weighted_value : Array = [5,10,5,10,5,10]

@onready var highlight: Sprite2D = $highlight
@onready var dice_animations: AnimatedSprite2D = $Node2D/diceAnimations
@onready var face_values_weights: VBoxContainer = $face_values_weights

var drag_check : bool = false
var drag_timer : float = 0

var ani_offset : int = 24

var default_lerp = 8
var drag_lerp_value = 16

var skip_next_exit : bool = false

func _ready() -> void:
	for w in weighted_value:
		full_weight += w


func _process(delta: float) -> void:
	pass
	#print(position)
	#pass
	if not Player.current_state == Player.player_states.ROLL:
		if not dragging:
			dice_animations.global_position = dice_animations.position.lerp(Vector2(self.global_position.x + ani_offset,self.global_position.y + ani_offset), default_lerp * delta)
		elif dragging:
			
			dice_animations.global_position = dice_animations.position.lerp(Vector2(self.global_position.x + ani_offset,self.global_position.y + ani_offset), drag_lerp_value * delta)
			
			if Input.is_action_just_pressed(\"mouseLeft\"):
				release_drag()
		
		if drag_check:
			drag_timer += 1 * delta
			if drag_timer >= .25:
				
				drag()
				drag_check = false
				drag_check = 0	
				
		if dragging:
			calculate_drag_positions()
			global_position = Vector2(get_global_mouse_position().x - size.x/2, get_global_mouse_position().y - size.y/2)
		else:
			position = Vector2.ZERO
		
func play_roll_animation():
	#dice_animations.play(\"rotating\")
	#animation_player.play(\"ROLL\")
	pass

func check_coll():
	var rect = self.get_global_rect()
	var mouse_position = self.get_global_mouse_position()
	if rect.has_point(mouse_position):
		_on_select_mouse_entered()
	
func _on_select_pressed() -> void:
	if not Player.current_state == Player.player_states.ROLL and not dragging:
	
		selected = !selected
				
		if not selected:
			animate_deselect(dice_animations, highlight)
			skip_next_exit = true
			
			if Player.current_state == Player.player_states.DISCARD:
				Player.remove_discard_list(self)
			elif Player.current_state == Player.player_states.SELECTION:
				Player.remove_score_list(self)
			
			print(\"Deselected : \", rolled_value)
			
		elif selected:
			animate_select(dice_animations, highlight)
			
			
			if Player.current_state == Player.player_states.DISCARD:
				Player.add_discard_list(self)
			elif Player.current_state == Player.player_states.SELECTION:
				Player.add_score_list(self)
			
			print(\"Selected : \", rolled_value)

func _on_select_mouse_entered() -> void:
	if not Player.current_state == Player.player_states.ROLL and not Player.dragging_dice:
		print(\"!\")
		animate_highlight(dice_animations, highlight)
		
		if Player.current_state == Player.player_states.DISCARD:
			appear_unrolled_dice(face_values_weights,face_values, weighted_value, dice_name, dice_animations)

func _on_select_mouse_exited() -> void:
	if not Player.current_state == Player.player_states.ROLL and not Player.dragging_dice and not (dragging or drag_timer > 0):
		
		if skip_next_exit:
			skip_next_exit = false
		else:
			animate_unhighlight(dice_animations, highlight)
			
		if Player.current_state == Player.player_states.DISCARD:
			disappear_unrolled_dice(face_values_weights, face_values)

func reset_die():
	selected = false
	rolled_value = 0
	_on_select_mouse_exited()

func _on_animated_sprite_2d_animation_finished() -> void:
	if dice_animations.animation == \"rotating\":
		dice_animations.play(\"faces\")
		dice_animations.pause()
		dice_animations.set_frame_and_progress(face_values.find(rolled_value) + 1, 0)
		
func _on_select_button_down() -> void:
	Player.dragging_dice = true
	drag_check = true

func _on_select_button_up() -> void:
	drag_check = false
	drag_timer = 0
	
	if not dragging:
		Player.dragging_dice = false
	
	#
	#if dragging:
		#release_drag()
	
func drag():

	dragging = true
	Player.dragging_dice = true
	
	disappear_unrolled_dice(face_values_weights, face_values)
	animate_highlight(dice_animations, highlight)
	
func calculate_drag_positions():
	var slots = get_parent().get_parent().get_children()
	var closest = get_parent()
	var index  = get_parent().get_index()
	for s in slots:
		var distance = global_position.distance_to(s.global_position)
		
		if distance < global_position.distance_to(closest.global_position):
			closest = s
			index = s.get_index()
		
	var replaced_node = closest.get_child(0)
	
	if replaced_node != null:
		replaced_node.reparent(get_parent())
		replaced_node.position = Vector2.ZERO
		
	reparent(slots[index])
	
func release_drag():
	dragging = false
	drag_check = false
	Player.dragging_dice = false
	selected = !selected
	#_on_select_mouse_exited()
	#animate_deselect(dice_animations, highlight)
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mqr21"]
resource_local_to_scene = true
shader = ExtResource("1_jegh1")
shader_parameter/clr = Color(1, 1, 1, 0)
shader_parameter/type = 2
shader_parameter/thickness = 2.0

[sub_resource type="AtlasTexture" id="AtlasTexture_51br0"]
atlas = ExtResource("2_obnvy")
region = Rect2(0, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_ce4gr"]
atlas = ExtResource("2_obnvy")
region = Rect2(40, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_rp1a1"]
atlas = ExtResource("2_obnvy")
region = Rect2(80, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_3c27b"]
atlas = ExtResource("2_obnvy")
region = Rect2(120, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_qyivx"]
atlas = ExtResource("2_obnvy")
region = Rect2(160, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_ss05e"]
atlas = ExtResource("2_obnvy")
region = Rect2(200, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_4q00x"]
atlas = ExtResource("2_obnvy")
region = Rect2(240, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_q8qi8"]
atlas = ExtResource("3_14wer")
region = Rect2(0, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_6qo6w"]
atlas = ExtResource("3_14wer")
region = Rect2(48, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_xlu41"]
atlas = ExtResource("3_14wer")
region = Rect2(96, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_13te8"]
atlas = ExtResource("3_14wer")
region = Rect2(144, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_8pfuo"]
atlas = ExtResource("3_14wer")
region = Rect2(192, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_umiet"]
atlas = ExtResource("3_14wer")
region = Rect2(240, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_6qo0l"]
atlas = ExtResource("3_14wer")
region = Rect2(288, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_tk8c7"]
atlas = ExtResource("3_14wer")
region = Rect2(336, 0, 48, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_13ip4"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_51br0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ce4gr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rp1a1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3c27b")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qyivx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ss05e")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4q00x")
}],
"loop": true,
"name": &"faces",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_q8qi8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6qo6w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xlu41")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_13te8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8pfuo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_umiet")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6qo0l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tk8c7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_q8qi8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6qo6w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xlu41")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_13te8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8pfuo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_umiet")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6qo0l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tk8c7")
}],
"loop": false,
"name": &"rotating",
"speed": 32.0
}]

[node name="odd_dice" type="Control"]
z_as_relative = false
custom_minimum_size = Vector2(48, 48)
layout_mode = 3
anchors_preset = 0
offset_right = 48.0
offset_bottom = 48.0
pivot_offset = Vector2(24, 24)
size_flags_horizontal = 4
size_flags_vertical = 4
script = SubResource("GDScript_1gxl3")
dice_name = "Even Die"

[node name="RemoteTransform2D" type="RemoteTransform2D" parent="."]
remote_path = NodePath("../Node2D/diceAnimations")
update_position = false
update_rotation = false

[node name="highlight" type="Sprite2D" parent="."]
modulate = Color(1, 1, 1, 0)
top_level = true
position = Vector2(24, 24)
texture = ExtResource("1_5cihv")
region_enabled = true
region_rect = Rect2(40, 0, 40, 40)

[node name="Node2D" type="Node2D" parent="."]

[node name="diceAnimations" type="AnimatedSprite2D" parent="Node2D"]
top_level = true
z_as_relative = false
material = SubResource("ShaderMaterial_mqr21")
position = Vector2(24, 24)
sprite_frames = SubResource("SpriteFrames_13ip4")
animation = &"faces"

[node name="RemoteTransform2D" type="RemoteTransform2D" parent="Node2D/diceAnimations"]
z_as_relative = false
remote_path = NodePath("../../../highlight")

[node name="select" type="Button" parent="."]
modulate = Color(1, 1, 1, 0)
self_modulate = Color(1, 1, 1, 0)
layout_mode = 0
offset_left = 8.0
offset_top = 8.0
offset_right = 40.0
offset_bottom = 40.0

[node name="face_values_weights" type="VBoxContainer" parent="."]
custom_minimum_size = Vector2(64, 32)
layout_mode = 0
offset_left = 8.0
offset_top = -260.0
offset_right = 460.0
offset_bottom = 28.0
mouse_filter = 2
theme_override_constants/separation = 4

[node name="HBoxContainer" type="HBoxContainer" parent="face_values_weights"]
layout_mode = 2
theme_override_constants/separation = 36

[node name="VBoxContainer" type="VBoxContainer" parent="face_values_weights/HBoxContainer"]
layout_mode = 2

[node name="unrolled_face3" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face4" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face5" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face6" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face7" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face8" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face_name" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("5_cyuuo")]
custom_minimum_size = Vector2(43, 0)
layout_mode = 2

[node name="VBoxContainer2" type="VBoxContainer" parent="face_values_weights/HBoxContainer"]
layout_mode = 2

[node name="unrolled_face" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("4_eriu8")]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="unrolled_face2" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face3" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face4" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face5" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face6" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face_name" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("5_cyuuo")]
custom_minimum_size = Vector2(65, 0)
layout_mode = 2
size_flags_horizontal = 0

[node name="VBoxContainer3" type="VBoxContainer" parent="face_values_weights/HBoxContainer"]
layout_mode = 2

[node name="unrolled_face" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("4_eriu8")]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="unrolled_face2" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face3" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face4" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face5" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face6" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face_name" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("5_cyuuo")]
custom_minimum_size = Vector2(65, 0)
layout_mode = 2
size_flags_horizontal = 0

[node name="VBoxContainer4" type="VBoxContainer" parent="face_values_weights/HBoxContainer"]
layout_mode = 2

[node name="unrolled_face" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("4_eriu8")]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="unrolled_face2" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face3" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face4" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face5" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face6" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("4_eriu8")]
layout_mode = 2

[node name="unrolled_face_name" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("5_cyuuo")]
custom_minimum_size = Vector2(65, 0)
layout_mode = 2
size_flags_horizontal = 0

[connection signal="animation_finished" from="Node2D/diceAnimations" to="." method="_on_animated_sprite_2d_animation_finished"]
[connection signal="button_down" from="select" to="." method="_on_select_button_down"]
[connection signal="button_up" from="select" to="." method="_on_select_button_up"]
[connection signal="mouse_entered" from="select" to="." method="_on_select_mouse_entered"]
[connection signal="mouse_exited" from="select" to="." method="_on_select_mouse_exited"]
[connection signal="pressed" from="select" to="." method="_on_select_pressed"]
