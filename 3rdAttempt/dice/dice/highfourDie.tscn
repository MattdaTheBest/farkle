[gd_scene load_steps=28 format=3 uid="uid://bwupmlrvjr0xs"]

[ext_resource type="Texture2D" uid="uid://df4bltru215ad" path="res://3rdAttempt/dice/dice/sprites/die.png" id="1_8pafa"]
[ext_resource type="Shader" path="res://3rdAttempt/dice/dice/scripts/highLightShader.gdshader" id="2_41hro"]
[ext_resource type="Texture2D" uid="uid://devydsnib3c07" path="res://3rdAttempt/dice/dice/sprites/high_four_sided_faces.png" id="3_t36wg"]
[ext_resource type="Texture2D" uid="uid://c2dcdnkwnc3am" path="res://3rdAttempt/dice/dice/sprites/rotating_dice.png" id="4_biwi3"]
[ext_resource type="Script" path="res://unrolled_face_name.gd" id="5_2wlyj"]
[ext_resource type="FontFile" uid="uid://ckxb0xryleu3y" path="res://fonts/GrapeSoda.ttf" id="6_ps67m"]
[ext_resource type="Texture2D" uid="uid://nd1fgukfyvik" path="res://3rdAttempt/dice/dice/sprites/unrolled_dice.png" id="7_3uffq"]
[ext_resource type="PackedScene" uid="uid://cls0wakep4jwl" path="res://3rdAttempt/scenes/unrolled_face.tscn" id="8_ieppm"]

[sub_resource type="GDScript" id="GDScript_1gxl3"]
script/source = "extends DiceBaseScript
class_name HighFour

@export var dice_name : String
@export var face_values : Array = [3, 4, 5, 6]
@export var weighted_value : Array = [10,10,10,10]

@onready var highlight: Sprite2D = $highlight
@onready var dice_animations: AnimatedSprite2D = $Node2D/diceAnimations
@onready var face_values_weights: VBoxContainer = $face_values_weights
@onready var unrolled_face_name: Node2D = $Node2D/diceAnimations/Node2D
@onready var hover_area: Control = $Node2D/diceAnimations/Node2D/hover_area

var drag_check : bool = false
var drag_timer : float = 0
var ani_offset : int = 24
var default_lerp = 8
var drag_lerp_value = 32
var skip_next_exit : bool = false
var hovering : bool = false

func _ready() -> void:
	for w in weighted_value:
		full_weight += w

func _process(delta: float) -> void:
		
	if hovering != check_coll() and not rolling:
		
		if not selected:
			wobble(dice_animations)
		
		if not dragging:
			if not hovering:
				if not Player.current_state == Player.player_states.ROLL and not dragging and not Player.dragging_dice:
					hovering = true
					
					appear_name(dice_name, unrolled_face_name)
					
					if not selected:
						animate_highlight(dice_animations, highlight)
			else:
				
				if not Player.current_state == Player.player_states.ROLL and not dragging and not Player.dragging_dice:
					hovering = false
					
					disappear_name(unrolled_face_name)
					
					if not selected:
						animate_unhighlight(dice_animations, highlight)
					
					await disappear_unrolled_dice(face_values_weights,face_values)
					
					disappear_unrolled_dice(face_values_weights,face_values)
		
		hovering = check_coll()
	
	if hovering:
		
		if Player.current_state == Player.player_states.DISCARD or Player.current_state == Player.player_states.SELECTION:
			
			if Input.is_action_just_pressed(\"mouseRight\") and not Player.dragging_dice:
				if unrolled_state == stats_unrolled.opening:
					disappear_unrolled_dice(face_values_weights, face_values)
				else:
					appear_unrolled_dice(face_values_weights,face_values, weighted_value, dice_name, dice_animations, self)
					
			if Input.is_action_pressed(\"mouseLeft\") and not Player.dragging_dice:
				drag_timer += 1 * delta
				
				if drag_timer > 0.25 and not dragging:
					dragging = true
					
					Player.dragging_dice = true
					
					animate_select(dice_animations)
					
					if unrolled_state == stats_unrolled.opening:
						disappear_unrolled_dice(face_values_weights, face_values)
				
			if Input.is_action_just_released(\"mouseLeft\"):
				drag_timer = 0
				
				if dragging:
					
					Player.dragging_dice = false
						
					dragging = false
					
					animate_unhighlight(dice_animations, highlight)
					
					if dice_animations.position.distance_to(position) > 50:
						
						disappear_name(unrolled_face_name)
		
		else:
			
			drag_timer = 0
			
			dragging = false
					
	if dragging:
		global_position = Vector2(get_global_mouse_position().x - size.x/2, get_global_mouse_position().y - size.y/2)
		dice_animations.global_position = dice_animations.position.lerp(Vector2(self.global_position.x + ani_offset,self.global_position.y + ani_offset), drag_lerp_value * delta)
		unrolled_face_name.global_position = unrolled_face_name.position.lerp(Vector2(self.global_position.x + self.size.x/2 - unrolled_face_name.get_child(0).size.x/2,self.global_position.y - 32), drag_lerp_value * delta)
	elif not Player.current_state == Player.player_states.DRAW:
		position = Vector2.ZERO
		dice_animations.global_position = dice_animations.position.lerp(Vector2(self.global_position.x + ani_offset,self.global_position.y + ani_offset), default_lerp * delta)
		unrolled_face_name.global_position = unrolled_face_name.position.lerp(Vector2(self.global_position.x + self.size.x/2 - unrolled_face_name.get_child(0).size.x/2,self.global_position.y - 32), default_lerp * delta)
	
	if Player.dragging_dice and Player.held_dice.has(self):
		
		calculate_drag_positions()

func check_coll():
	var rect = hover_area.get_global_rect()
	var mouse_position = hover_area.get_global_mouse_position()
	if rect.has_point(mouse_position):
		return true
	else:
		return false
	
func _on_select_pressed() -> void:
	if not Player.current_state == Player.player_states.ROLL and hovering and not dragging:
	
		selected = !selected
				
		if not selected:
			
			animate_deselect(dice_animations)
			
			if Player.current_state == Player.player_states.DISCARD:
				Player.remove_discard_list(self)
			elif Player.current_state == Player.player_states.SELECTION:
				Player.remove_score_list(self)
			
		elif selected:
			
			print(dice_name, \" : \", rolled_value)
			
			animate_select(dice_animations)
			
			if Player.current_state == Player.player_states.DISCARD:
				Player.add_discard_list(self)
			elif Player.current_state == Player.player_states.SELECTION:
				Player.add_score_list(self)
		
func reset_die():
	selected = false
	rolled_value = 0
	dice_animations.scale = Vector2(0,0)
	dice_animations.set_frame_and_progress(0,0)
	var clr = dice_animations.material.get(\"shader_parameter/clr\")
	clr.a = 0.0
	dice_animations.material.set(\"shader_parameter/clr\", clr)
	dice_animations.rotation_degrees = 0
	#
func calculate_drag_positions():
	var slots = get_parent().get_parent().get_children()

	var closest = get_parent()
	var index  = get_parent().get_index()
	for s in slots:
		var distance = global_position.distance_to(s.global_position)
		
		if distance < global_position.distance_to(closest.global_position):
			closest = s
			index = s.get_index()
		
	var replaced_node = closest.get_child(0)
	
	if replaced_node != null:
		replaced_node.reparent(get_parent())
		replaced_node.position = Vector2.ZERO
		
	reparent(slots[index])
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rma3p"]
resource_local_to_scene = true
shader = ExtResource("2_41hro")
shader_parameter/clr = Color(1, 1, 1, 0)
shader_parameter/type = 2
shader_parameter/thickness = 2.0

[sub_resource type="AtlasTexture" id="AtlasTexture_hl128"]
atlas = ExtResource("3_t36wg")
region = Rect2(0, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_4770d"]
atlas = ExtResource("3_t36wg")
region = Rect2(40, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_px8pw"]
atlas = ExtResource("3_t36wg")
region = Rect2(80, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_ky4ch"]
atlas = ExtResource("3_t36wg")
region = Rect2(120, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_44a3c"]
atlas = ExtResource("3_t36wg")
region = Rect2(160, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_on3nm"]
atlas = ExtResource("3_t36wg")
region = Rect2(200, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_mjhqh"]
atlas = ExtResource("3_t36wg")
region = Rect2(240, 0, 40, 40)

[sub_resource type="AtlasTexture" id="AtlasTexture_q8qi8"]
atlas = ExtResource("4_biwi3")
region = Rect2(0, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_6qo6w"]
atlas = ExtResource("4_biwi3")
region = Rect2(48, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_xlu41"]
atlas = ExtResource("4_biwi3")
region = Rect2(96, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_13te8"]
atlas = ExtResource("4_biwi3")
region = Rect2(144, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_8pfuo"]
atlas = ExtResource("4_biwi3")
region = Rect2(192, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_umiet"]
atlas = ExtResource("4_biwi3")
region = Rect2(240, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_6qo0l"]
atlas = ExtResource("4_biwi3")
region = Rect2(288, 0, 48, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_tk8c7"]
atlas = ExtResource("4_biwi3")
region = Rect2(336, 0, 48, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_13ip4"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_hl128")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4770d")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_px8pw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ky4ch")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_44a3c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_on3nm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mjhqh")
}],
"loop": true,
"name": &"faces",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_q8qi8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6qo6w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xlu41")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_13te8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8pfuo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_umiet")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6qo0l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tk8c7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_q8qi8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6qo6w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xlu41")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_13te8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8pfuo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_umiet")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6qo0l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tk8c7")
}],
"loop": false,
"name": &"rotating",
"speed": 32.0
}]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_xlc0f"]
bg_color = Color(8.90419e-07, 0.291049, 0.352438, 1)
border_width_left = 4
border_width_top = 4
border_width_right = 4
border_width_bottom = 4
border_color = Color(0.180392, 0.133333, 0.184314, 1)
corner_radius_top_left = 8
corner_radius_top_right = 8
corner_radius_bottom_right = 8
corner_radius_bottom_left = 8
anti_aliasing = false

[node name="basic_dice" type="Control"]
z_as_relative = false
custom_minimum_size = Vector2(48, 48)
layout_mode = 3
anchors_preset = 0
offset_right = 48.0
offset_bottom = 48.0
pivot_offset = Vector2(24, 24)
size_flags_horizontal = 4
size_flags_vertical = 4
mouse_filter = 2
script = SubResource("GDScript_1gxl3")
dice_name = "High Four"

[node name="RemoteTransform2D" type="RemoteTransform2D" parent="."]
remote_path = NodePath("../Node2D/diceAnimations")
update_position = false
update_rotation = false
update_scale = false

[node name="highlight" type="Sprite2D" parent="."]
visible = false
modulate = Color(1, 1, 1, 0)
top_level = true
position = Vector2(24, 24)
texture = ExtResource("1_8pafa")
region_enabled = true
region_rect = Rect2(40, 0, 40, 40)

[node name="Node2D" type="Node2D" parent="."]

[node name="diceAnimations" type="AnimatedSprite2D" parent="Node2D"]
top_level = true
z_as_relative = false
material = SubResource("ShaderMaterial_rma3p")
position = Vector2(24, 24)
sprite_frames = SubResource("SpriteFrames_13ip4")
animation = &"faces"

[node name="RemoteTransform2D" type="RemoteTransform2D" parent="Node2D/diceAnimations"]
remote_path = NodePath("../../../highlight")

[node name="Node2D" type="Node2D" parent="Node2D/diceAnimations"]
top_level = true
position = Vector2(-24, -24)

[node name="PanelContainer" type="PanelContainer" parent="Node2D/diceAnimations/Node2D"]
z_index = -1
offset_right = 86.0
offset_bottom = 24.0
scale = Vector2(1e-05, 1e-05)
pivot_offset = Vector2(43, 12)
theme_override_styles/panel = SubResource("StyleBoxFlat_xlc0f")
script = ExtResource("5_2wlyj")

[node name="Label" type="Label" parent="Node2D/diceAnimations/Node2D/PanelContainer"]
layout_mode = 2
theme_override_colors/font_color = Color(0.780392, 0.862745, 0.815686, 1)
theme_override_colors/font_shadow_color = Color(0.180392, 0.133333, 0.184314, 1)
theme_override_fonts/font = ExtResource("6_ps67m")
theme_override_font_sizes/font_size = 16
text = "   10% "
horizontal_alignment = 1
vertical_alignment = 1

[node name="hover_area" type="Control" parent="Node2D/diceAnimations/Node2D"]
custom_minimum_size = Vector2(48, 48)
layout_mode = 3
anchors_preset = 0
offset_left = 24.0
offset_top = 24.0
offset_right = 72.0
offset_bottom = 72.0
mouse_filter = 2

[node name="unfoldedVersion" type="Sprite2D" parent="."]
visible = false
position = Vector2(24, -80)
texture = ExtResource("7_3uffq")

[node name="select" type="Button" parent="."]
modulate = Color(1, 1, 1, 0)
self_modulate = Color(1, 1, 1, 0)
layout_mode = 0
offset_left = 8.0
offset_top = 8.0
offset_right = 40.0
offset_bottom = 40.0

[node name="face_values_weights" type="VBoxContainer" parent="."]
custom_minimum_size = Vector2(64, 32)
layout_mode = 0
offset_left = 8.0
offset_top = -256.0
offset_right = 364.0
offset_bottom = 32.0
mouse_filter = 2
theme_override_constants/separation = 4

[node name="HBoxContainer" type="HBoxContainer" parent="face_values_weights"]
layout_mode = 2
theme_override_constants/separation = 4

[node name="VBoxContainer" type="VBoxContainer" parent="face_values_weights/HBoxContainer"]
custom_minimum_size = Vector2(86, 0)
layout_mode = 2

[node name="unrolled_face3" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face4" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face5" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face6" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face7" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face8" parent="face_values_weights/HBoxContainer/VBoxContainer" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="VBoxContainer2" type="VBoxContainer" parent="face_values_weights/HBoxContainer"]
layout_mode = 2

[node name="unrolled_face" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("8_ieppm")]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="unrolled_face2" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face3" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face4" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face5" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face6" parent="face_values_weights/HBoxContainer/VBoxContainer2" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="VBoxContainer3" type="VBoxContainer" parent="face_values_weights/HBoxContainer"]
layout_mode = 2

[node name="unrolled_face" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("8_ieppm")]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="unrolled_face2" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face3" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face4" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face5" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face6" parent="face_values_weights/HBoxContainer/VBoxContainer3" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="VBoxContainer4" type="VBoxContainer" parent="face_values_weights/HBoxContainer"]
layout_mode = 2

[node name="unrolled_face" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("8_ieppm")]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="unrolled_face2" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face3" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face4" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face5" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("8_ieppm")]
layout_mode = 2

[node name="unrolled_face6" parent="face_values_weights/HBoxContainer/VBoxContainer4" instance=ExtResource("8_ieppm")]
layout_mode = 2

[connection signal="animation_finished" from="Node2D/diceAnimations" to="." method="_on_animated_sprite_2d_animation_finished"]
[connection signal="button_down" from="select" to="." method="_on_select_button_down"]
[connection signal="button_up" from="select" to="." method="_on_select_button_up"]
[connection signal="mouse_entered" from="select" to="." method="_on_select_mouse_entered"]
[connection signal="mouse_exited" from="select" to="." method="_on_select_mouse_exited"]
[connection signal="pressed" from="select" to="." method="_on_select_pressed"]
